# Nombre del workflow, claro y conciso.
name: Deploy Astro Site to GitHub Pages

on:
  # Se ejecuta cuando haces un "push" a la rama `main`.
  push:
    branches: ["main"]

  # Te permite ejecutarlo manualmente desde la pestaña de "Actions" en GitHub.
  workflow_dispatch:

# Permisos necesarios que la Action necesita para leer el código y desplegar a Pages.
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    # Define el entorno de despliegue. Es crucial para que los "secrets" de ese entorno estén disponibles.
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    steps:
      # 1. Descarga tu código del repositorio a la máquina virtual.
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Configura el entorno de Node.js, usando la versión 20 y habilitando el caché de npm para más velocidad.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # 3. Instala las dependencias del proyecto de forma limpia.
      - name: Install dependencies
        run: npm ci

      # 4. PASO DE DEPURACIÓN AÑADIDO
      # Este paso verifica si los secrets están disponibles ANTES de construir el sitio.
      - name: Debug Secrets
        run: |
          if [ -z "${{ secrets.PUBLIC_N8N_HOST }}" ]; then
            echo "Error: El secreto PUBLIC_N8N_HOST no está definido o está vacío."
            exit 1
          else
            echo "Éxito: El secreto PUBLIC_N8N_HOST fue encontrado."
          fi
          if [ -z "${{ secrets.PUBLIC_N8N_WEBHOOK_ID }}" ]; then
            echo "Error: El secreto PUBLIC_N8N_WEBHOOK_ID no está definido o está vacío."
            exit 1
          else
            echo "Éxito: El secreto PUBLIC_N8N_WEBHOOK_ID fue encontrado."
          fi
      
      # 5. Construye el sitio estático.
      #    Este paso ahora solo se ejecutará si el paso de depuración fue exitoso.
      - name: Build
        run: npm run build
        env:
          PUBLIC_N8N_HOST: ${{ secrets.PUBLIC_N8N_HOST }}
          PUBLIC_N8N_WEBHOOK_ID: ${{ secrets.PUBLIC_N8N_WEBHOOK_ID }}
      
      # 6. Configura GitHub Pages para el despliegue.
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 7. Sube los archivos construidos (de la carpeta /dist) como un artefacto.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      # 8. Despliega el artefacto subido a GitHub Pages.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4